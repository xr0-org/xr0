#!/bin/bash
printf 'running test suite at %s\n\n' "$(date)"
start=$(date +"%s")

ntests=0
npass=0

expected_suffix="EXPECTED"
fail_prefix="FAIL"
topological_folder="topological"
main_func="main"

pass="\e[32mPASS\e[0m\n"
fail="\e[31mFAIL\e[0m\n"

XR0=$(pwd)/bin/0v
libx=$(pwd)/libx
cd tests
length=$(ls */*.x | awk '{ print length, $0 }' | sort -n -s | cut -d' ' -f2- |
	tail -1 | wc -c)

for f in */*.x
do
	ntests=$((ntests+1))
	folder=$(dirname "$f")

	printf "%-${length}s ..." "$f"
	tempfile="${f}.temp"
	if [ "$folder" == *"$topological_folder"* ]
	then
		if [[ "$f" == *"verification"* ]]
		then
			output=$($XR0 -x main -I $libx -v $f > "$tempfile" 2>&1)
		else
			output=$($XR0 -t main -I $libx $f > "$tempfile" 2>&1)
		fi
	else 
		output=$($XR0 -I $libx $f > "$tempfile" 2>&1)
	fi

	# cases where we have an expected output to compare with
	if [[ "$f" == *"${fail_prefix}"* || "$folder" == *"$topological_folder"* ]]
	then
		expected_file="${f}.${expected_suffix}"
		
		output_file=$(<$tempfile)
		echo "$output_file" | diff - $expected_file
		if diff -q "$tempfile" "$expected_file" >/dev/null;
		then
			npass=$((npass+1))
			printf "$pass"
		else
			printf "$fail"
		fi
	else
		# silence is golden
		if [[ $output -eq 0 ]] 
		then
			npass=$((npass+1))
			printf "$pass"
		fi
	fi

	rm $tempfile
done

nfail=$((ntests-npass))
finish=$(date +"%s")
printf '\n%d tests:\t%d passed\t%d failed\tin %d seconds\n' \
	$ntests $npass $nfail $((finish-start))
if [ $nfail -ne 0 ]
then
	exit 1
fi
